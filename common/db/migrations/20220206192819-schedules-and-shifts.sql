
-- +migrate Up
CREATE TYPE shift_interval AS ENUM ('daily', 'weekly', 'bi-weekly', 'monthly');

CREATE TABLE IF NOT EXISTS schedules (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    slack_channel_id text NOT NULL CONSTRAINT schedules_slack_id_uq UNIQUE,
    team_slack_id text NOT NULL,
    name text NOT NULL,
    interval shift_interval NOT NULL,
    is_enabled boolean NOT NULL DEFAULT true,
    end_time time with time zone NOT NULL,
    start_time time with time zone NOT NULL,
    weekdays_only boolean NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT ('now'::text)::timestamp with time zone,
    updated_at timestamp with time zone NOT NULL DEFAULT ('now'::text)::timestamp with time zone
);

CREATE INDEX schedules_team_slack_id_idx ON schedules (team_slack_id);
CREATE INDEX schedules_slack_channel_id_idx ON schedules (slack_channel_id);
CREATE INDEX schedules_is_enabled_idx ON schedules (is_enabled);

CREATE TYPE shift_status AS ENUM ('active', 'override');

CREATE TABLE IF NOT EXISTS shifts (
    sequence_id SERIAL,
    user_id integer NOT NULL REFERENCES users (id),
    schedule_id integer NOT NULL REFERENCES schedules (id),
    status shift_status NULL,
    started_at timestamp with time zone NULL,
    created_at timestamp with time zone NOT NULL DEFAULT ('now'::text)::timestamp with time zone,
    updated_at timestamp with time zone NOT NULL DEFAULT ('now'::text)::timestamp with time zone,    
    PRIMARY KEY(user_id, schedule_id)
);

CREATE INDEX shifts_sequence_id_idx ON shifts (sequence_id);
ALTER TABLE shifts ADD CONSTRAINT shift_status_uq UNIQUE (schedule_id, status);

-- +migrate Down
DROP INDEX IF EXISTS shifts_sequence_id_idx;
ALTER TABLE shifts DROP CONSTRAINT shift_status_uq;
DROP TABLE IF EXISTS shifts;
DROP TYPE IF EXISTS shift_status;

DROP INDEX IF EXISTS schedule_team_id_idx;
DROP INDEX IF EXISTS schedules_slack_channel_id_idx;
DROP INDEX IF EXISTS schedules_is_enabled_idx;
DROP TABLE IF EXISTS schedules;

DROP TYPE IF EXISTS shift_interval;
