// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SchedulesColumns holds the columns for the "schedules" table.
	SchedulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slack_channel_id", Type: field.TypeString, Unique: true},
		{Name: "team_slack_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "interval", Type: field.TypeEnum, Enums: []string{"daily", "weekly", "bi-weekly", "monthly"}},
		{Name: "is_enabled", Type: field.TypeBool, Default: true},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "weekdays_only", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// SchedulesTable holds the schema information for the "schedules" table.
	SchedulesTable = &schema.Table{
		Name:       "schedules",
		Columns:    SchedulesColumns,
		PrimaryKey: []*schema.Column{SchedulesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "schedule_is_enabled",
				Unique:  false,
				Columns: []*schema.Column{SchedulesColumns[5]},
			},
			{
				Name:    "schedule_team_slack_id",
				Unique:  false,
				Columns: []*schema.Column{SchedulesColumns[2]},
			},
			{
				Name:    "schedule_slack_channel_id",
				Unique:  false,
				Columns: []*schema.Column{SchedulesColumns[1]},
			},
		},
	}
	// ShiftsColumns holds the columns for the "shifts" table.
	ShiftsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sequence_id", Type: field.TypeInt, Nullable: true, SchemaType: map[string]string{"postgres": "serial"}},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"active", "override"}},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "schedule_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ShiftsTable holds the schema information for the "shifts" table.
	ShiftsTable = &schema.Table{
		Name:       "shifts",
		Columns:    ShiftsColumns,
		PrimaryKey: []*schema.Column{ShiftsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shifts_schedules_shifts",
				Columns:    []*schema.Column{ShiftsColumns[6]},
				RefColumns: []*schema.Column{SchedulesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shifts_users_shifts",
				Columns:    []*schema.Column{ShiftsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shift_sequence_id",
				Unique:  false,
				Columns: []*schema.Column{ShiftsColumns[1]},
			},
			{
				Name:    "shift_user_id_schedule_id",
				Unique:  true,
				Columns: []*schema.Column{ShiftsColumns[7], ShiftsColumns[6]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slack_id", Type: field.TypeString, Unique: true},
		{Name: "slack_handle", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "avatar_url", Type: field.TypeString},
		{Name: "display_name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SchedulesTable,
		ShiftsTable,
		UsersTable,
	}
)

func init() {
	ShiftsTable.ForeignKeys[0].RefTable = SchedulesTable
	ShiftsTable.ForeignKeys[1].RefTable = UsersTable
}
